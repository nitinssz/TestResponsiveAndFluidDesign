---
import '../styles/fluid-pure-css.css';
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
    <title>Demo: Pure CSS Fluid Design System</title>
    <meta name="description" content="Pure CSS fluid design demo - zero JavaScript, scales beautifully with viewport" />
    <style>
      body {
        background: #f5f5f5;
      }

      /* Debug Bar */
      .debug-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #000;
        color: #fff;
        padding: 0.5rem 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        z-index: 10000;
        font-size: 0.75rem;
        font-family: monospace;
        transition: transform 0.3s ease;
        transform: translateY(0);
      }

      .debug-bar.hidden {
        transform: translateY(100%);
      }

      .debug-bar strong {
        color: #4ade80;
      }

      /* Navigation Link */
      .nav-link {
        position: fixed;
        top: 3rem;
        left: 1rem;
        z-index: 9999;
        background: rgba(255, 255, 255, 0.95);
        color: #667eea;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.875rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
      }

      .nav-link:hover {
        background: #667eea;
        color: white;
        transform: translateX(-2px);
      }

      /* Hero Section */
      .hero {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 3rem 1rem;
        position: relative;
        overflow: hidden;
        margin-bottom: 2.5rem;
      }

      .hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 30% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                    radial-gradient(circle at 70% 80%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
        pointer-events: none;
      }

      .hero-wrapper {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        align-items: center;
        position: relative;
        z-index: 2;
        width: 100%;
      }

      .hero-content {
        text-align: center;
        color: white;
      }

      .hero-title {
        font-size: 2.5rem;
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #fff, #f0f0f0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .hero-description {
        font-size: 1.125rem;
        line-height: 1.6;
        margin-bottom: 2rem;
        opacity: 0.9;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
      }

      .hero-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        align-items: center;
        justify-content: center;
      }

      .btn {
        padding: 0.875rem 1.75rem;
        border: none;
        border-radius: 0.5rem;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        white-space: nowrap;
      }

      .btn-primary {
        background: linear-gradient(45deg, #ff6b6b, #ee5a24);
        color: white;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);
      }

      .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 2px solid rgba(255, 255, 255, 0.3);
      }

      .btn-secondary:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.5);
        transform: translateY(-2px);
      }

      .hero-image {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .image-placeholder {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
      }

      .image-placeholder svg {
        width: 100%;
        height: auto;
        max-width: 300px;
        filter: drop-shadow(0 10px 30px rgba(0, 0, 0, 0.2));
      }

      .placeholder-text {
        color: rgba(255, 255, 255, 0.6);
        font-size: 0.9rem;
        font-weight: 500;
        margin: 0;
      }

      @media (min-width: 768px) {
        .hero-wrapper {
          grid-template-columns: 1fr 1fr;
          gap: 3rem;
        }

        .hero-content {
          text-align: left;
        }

        .hero-buttons {
          justify-content: flex-start;
        }

        .image-placeholder svg {
          max-width: 400px;
        }
      }

      /* Test Sections */
      .test-section {
        padding: 3rem 1rem;
      }

      .test-card {
        background: white;
        padding: 2rem;
        border-radius: 1rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .test-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
      }

      .color-box {
        width: 100px;
        height: 100px;
        border-radius: 0.5rem;
        margin: 1rem 0;
      }

      .button-group {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
      }

      .test-button {
        padding: 0.75rem 1.5rem;
        background: #667eea;
        color: white;
        border: none;
        border-radius: 0.5rem;
        font-size: 1rem;
        cursor: pointer;
        transition: transform 0.2s;
      }

      .test-button:hover {
        transform: translateY(-2px);
      }
    </style>
	</head>
	<body>
    <!-- Navigation Link -->
    <a href="/" class="nav-link">‚Üê Back to Approaches</a>

    <!-- Debug Bar -->
    <div class="debug-bar">
      <div>
        <strong>Viewport:</strong> <span id="vw">0</span>px √ó <span id="vh">0</span>px
      </div>
      <div>
        <strong>1rem =</strong> <span id="htmlFs">0</span>px
      </div>
      <div>
        <strong>Breakpoint:</strong> <span id="bp">Mobile</span>
      </div>
      <div>
        <strong>üéâ Pure CSS - Zero JS for scaling!</strong>
      </div>
    </div>

    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-wrapper fluid-container">
        <div class="hero-content">
          <h1 class="hero-title">Pure CSS Fluid Design System</h1>
          <p class="hero-description">
            Experience perfect scaling at every viewport. Designed at 320px, 768px, and 1280px - 
            scales beautifully everywhere in between with zero JavaScript!
          </p>
          <div class="hero-buttons">
            <a href="#examples" class="btn btn-primary">See Examples</a>
            <a href="#how-it-works" class="btn btn-secondary">Learn More</a>
          </div>
        </div>
        <div class="hero-image">
          <div class="image-placeholder">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 300" fill="none">
              <rect width="400" height="300" fill="rgba(255, 255, 255, 0.1)" rx="12"/>
              <circle cx="150" cy="100" r="40" fill="rgba(255, 255, 255, 0.2)"/>
              <path d="M50 220 L120 150 L180 180 L350 80" stroke="rgba(255, 255, 255, 0.3)" stroke-width="8" stroke-linecap="round" stroke-linejoin="round"/>
              <rect x="160" y="180" width="200" height="90" fill="rgba(255, 255, 255, 0.15)" rx="8"/>
            </svg>
            <p class="placeholder-text">Image Placeholder</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Examples Section -->
    <main id="examples" class="test-section fluid-container">
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1rem;">
          How It Works
        </h2>
        <p class="fluid-text-base" style="margin-bottom: 1.5rem; opacity: 0.8;">
          Resize your browser - everything scales with REM units! Zero JavaScript needed for scaling.
        </p>
        <div style="background: #fef3c7; padding: 1rem; border-radius: 0.5rem; border-left: 4px solid #f59e0b;">
          <strong>The Magic:</strong> The html element's font-size changes with viewport using clamp(). 
          All content uses REM units (relative to html font-size). So everything scales automatically!
        </div>
      </div>

      <!-- Typography Test -->
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1.5rem;">
          Typography Scaling (REM Based)
        </h2>
        <div style="display: flex; flex-direction: column; gap: 1rem;">
          <p class="fluid-text-5xl">5XL (3rem): The quick brown fox</p>
          <p class="fluid-text-4xl">4XL (2.25rem): The quick brown fox</p>
          <p class="fluid-text-3xl">3XL (1.875rem): The quick brown fox</p>
          <p class="fluid-text-2xl">2XL (1.5rem): The quick brown fox</p>
          <p class="fluid-text-xl">XL (1.25rem): The quick brown fox</p>
          <p class="fluid-text-lg">LG (1.125rem): The quick brown fox</p>
          <p class="fluid-text-base">Base (1rem): The quick brown fox</p>
          <p class="fluid-text-sm">SM (0.875rem): The quick brown fox</p>
          <p class="fluid-text-xs">XS (0.75rem): The quick brown fox</p>
        </div>
      </div>

      <!-- Spacing Test -->
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1.5rem;">
          Spacing & Colors (REM Based)
        </h2>
        <p style="font-size: 1rem; margin-bottom: 1rem;">
          Notice how the boxes scale proportionally with the viewport:
        </p>
        <div style="display: flex; gap: 1rem; flex-wrap: wrap;">
          <div class="color-box" style="background: #667eea;"></div>
          <div class="color-box" style="background: #764ba2;"></div>
          <div class="color-box" style="background: #f093fb;"></div>
          <div class="color-box" style="background: #4facfe;"></div>
        </div>
      </div>

      <!-- Button Test -->
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1.5rem;">
          Button Scaling (REM Based)
        </h2>
        <p style="font-size: 1rem; margin-bottom: 1.5rem;">
          Buttons maintain perfect proportions at all sizes:
        </p>
        <div class="button-group">
          <button class="test-button">Primary Action</button>
          <button class="test-button">Secondary Action</button>
          <button class="test-button">Tertiary Action</button>
        </div>
      </div>

      <!-- Grid Test -->
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1.5rem;">
          Grid Layout (REM Based)
        </h2>
        <div class="test-grid">
          <div style="background: #f3f4f6; padding: 1.5rem; border-radius: 0.5rem;">
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem;">Card 1</h3>
            <p class="fluid-text-base">Content scales proportionally</p>
          </div>
          <div style="background: #f3f4f6; padding: 1.5rem; border-radius: 0.5rem;">
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem;">Card 2</h3>
            <p class="fluid-text-base">No JavaScript needed!</p>
          </div>
          <div style="background: #f3f4f6; padding: 1.5rem; border-radius: 0.5rem;">
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem;">Card 3</h3>
            <p class="fluid-text-base">Pure CSS magic!</p>
          </div>
        </div>
      </div>

      <!-- How to Use -->
      <div id="how-it-works" class="test-card" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1rem;">
          How to Use (Developer Guide)
        </h2>
        <ol style="font-size: 1rem; line-height: 1.8; padding-left: 1.5rem;">
          <li style="margin-bottom: 0.5rem;">Import <code style="background: rgba(255,255,255,0.2); padding: 0.2rem 0.4rem; border-radius: 0.25rem;">fluid-design-system-pure-css.css</code></li>
          <li style="margin-bottom: 0.5rem;">Wrap content in <code style="background: rgba(255,255,255,0.2); padding: 0.2rem 0.4rem; border-radius: 0.25rem;">.fluid-container</code></li>
          <li style="margin-bottom: 0.5rem;">Use <code style="background: rgba(255,255,255,0.2); padding: 0.2rem 0.4rem; border-radius: 0.25rem;">rem</code> units for all measurements (divide px by 16)</li>
          <li style="margin-bottom: 0.5rem;">Or use utility classes like <code style="background: rgba(255,255,255,0.2); padding: 0.2rem 0.4rem; border-radius: 0.25rem;">.fluid-text-2xl</code></li>
          <li>That's it! Everything scales automatically with ZERO JavaScript! üéâ</li>
        </ol>
      </div>

      <!-- Benefits -->
      <div class="test-card">
        <h2 class="fluid-text-3xl" style="margin-bottom: 1rem;">
          Why Pure CSS?
        </h2>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 2rem;">
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Zero JavaScript</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">No JS required for scaling - works even if JavaScript is disabled</p>
          </div>
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Hardware Accelerated</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">GPU optimized rendering for smooth performance</p>
          </div>
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Instant Updates</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">No event listeners or polling needed</p>
          </div>
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Works Offline</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">No external dependencies or runtime calculations</p>
          </div>
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Simpler Code</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">Just use rem units - that's it!</p>
          </div>
          <div>
            <h3 class="fluid-text-xl" style="margin-bottom: 0.5rem; color: #10b981;">‚úÖ Better Performance</h3>
            <p style="font-size: 0.875rem; line-height: 1.6;">No JavaScript overhead or memory usage</p>
          </div>
        </div>
      </div>
    </main>

    <script>
      // Scroll behavior for debug bar
      let lastScrollTop = 0;
      const debugBar = document.querySelector('.debug-bar');
      
      if (debugBar) {
        window.addEventListener('scroll', function() {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
          
          if (scrollTop > lastScrollTop && scrollTop > 50) {
            // Scrolling down & past 50px
            debugBar.classList.add('hidden');
          } else {
            // Scrolling up
            debugBar.classList.remove('hidden');
          }
          
          lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
        }, false);
      }

      // This JavaScript is ONLY for the debug bar display
      // The actual scaling happens in pure CSS!
      function updateDebug() {
        const vw = window.innerWidth;
        const vh = window.innerHeight;
        
        const vwEl = document.getElementById('vw');
        const vhEl = document.getElementById('vh');
        const htmlFsEl = document.getElementById('htmlFs');
        const bpEl = document.getElementById('bp');
        
        if (vwEl) vwEl.textContent = String(vw);
        if (vhEl) vhEl.textContent = String(vh);
        
        // Get computed HTML font size (this is what 1rem equals)
        const htmlFs = parseFloat(getComputedStyle(document.documentElement).fontSize);
        if (htmlFsEl) htmlFsEl.textContent = htmlFs.toFixed(2);
        
        // Determine breakpoint
        let bp = 'Mobile';
        let status = '';
        
        if (vw <= 450) {
          bp = 'Mobile';
          status = 'Fluid Scaling';
        } else if (vw < 768) {
          bp = 'Mobile ‚Üí Tablet';
          status = 'Static (margins grow)';
        } else if (vw < 1024) {
          bp = 'Tablet';
          status = 'Fluid Scaling';
        } else if (vw < 1280) {
          bp = 'Tablet ‚Üí Desktop';
          status = 'Static (margins grow)';
        } else if (vw < 1440) {
          bp = 'Desktop';
          status = 'Fluid Scaling';
        } else {
          bp = 'Desktop+';
          status = 'Static (margins grow)';
        }
        
        if (bpEl) bpEl.textContent = `${bp} (${status})`;
      }
      
      updateDebug();
      window.addEventListener('resize', updateDebug);
      
      // Update every 100ms for smooth display
      setInterval(updateDebug, 100);
    </script>
	</body>
</html>

