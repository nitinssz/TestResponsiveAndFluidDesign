---
/**
 * Demo: Fluid + Tailwind Hybrid Approach
 * Uses Tailwind for layout/colors and fluid classes for scaling
 */
import '../styles/fluid-tailwind-core.css';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo: Fluid + Tailwind Hybrid</title>
  </head>
  <body class="bg-gray-50">
    <!-- Debug Bar -->
    <div id="debugBar" class="fixed bottom-0 left-0 right-0 bg-black text-white px-4 py-2 flex justify-between items-center z-50 text-xs font-mono transition-transform duration-300 ease-in-out">
      <div>Viewport: <span id="vw">0</span>px √ó <span id="vh">0</span>px</div>
      <div>1rem = <span id="htmlFs">0</span>px</div>
      <div>Breakpoint: <span id="bp">Mobile</span></div>
      <div class="text-green-400">‚úÖ Approach 1: Side-by-Side</div>
    </div>

    <!-- Navigation Link -->
    <a href="/" class="fixed top-12 left-4 z-40 bg-white/95 text-blue-600 px-4 py-2 rounded-lg text-sm font-semibold shadow-lg hover:bg-blue-600 hover:text-white transition-all">
      ‚Üê Back to Approaches
    </a>

    <!-- Hero Section -->
    <section class="min-h-screen flex items-center justify-center mb-10">
      <div class="fluid-container">
        <!-- Using Tailwind for layout -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          
          <!-- Content - Using fluid classes for text sizing -->
          <div class="flex flex-col justify-center">
            <h1 class="fluid-text-5xl font-bold mb-4 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              Approach 1: Side-by-Side
            </h1>
            <p class="fluid-text-lg text-gray-600 mb-6">
              Use Tailwind for layout, colors, and structure. Use fluid classes for sizing that needs to scale.
            </p>
            
            <!-- Buttons using Tailwind + fluid padding -->
            <div class="flex flex-wrap gap-4">
              <button class="fluid-padding-md bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg font-semibold hover:shadow-lg transition-all">
                Fluid Padding Button
              </button>
              <button class="px-6 py-3 bg-gray-200 text-gray-800 rounded-lg font-semibold hover:bg-gray-300 transition-all">
                Tailwind Padding (Fixed)
              </button>
            </div>
          </div>

          <!-- Image placeholder -->
          <div class="flex items-center justify-center">
            <div class="w-full max-w-md bg-gradient-to-br from-purple-400 to-pink-400 rounded-2xl p-8 shadow-xl">
              <div class="bg-white/20 backdrop-blur rounded-lg p-6">
                <div class="fluid-text-2xl font-bold text-white mb-2">Fluid Text</div>
                <div class="text-xl font-semibold text-white/80">Fixed Tailwind Text</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Comparison Section -->
    <section class="py-16 bg-white">
      <div class="fluid-container">
        <h2 class="fluid-text-4xl font-bold text-center mb-12">Compare: Fluid vs Fixed</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <!-- Fluid Card -->
          <div class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl overflow-hidden shadow-lg">
            <div class="fluid-padding-lg">
              <div class="inline-block fluid-padding-sm bg-green-500 text-white rounded-full fluid-text-xs font-bold mb-4">
                FLUID SCALING
              </div>
              <h3 class="fluid-text-2xl font-bold text-gray-800 mb-3">
                This Card Scales
              </h3>
              <p class="fluid-text-base text-gray-600 mb-4">
                All sizing uses fluid classes. Resize browser to see everything scale proportionally!
              </p>
              <ul class="space-y-2">
                <li class="flex items-center fluid-gap-sm">
                  <span class="fluid-text-lg">‚úÖ</span>
                  <span class="fluid-text-sm">Padding scales</span>
                </li>
                <li class="flex items-center fluid-gap-sm">
                  <span class="fluid-text-lg">‚úÖ</span>
                  <span class="fluid-text-sm">Text scales</span>
                </li>
                <li class="flex items-center fluid-gap-sm">
                  <span class="fluid-text-lg">‚úÖ</span>
                  <span class="fluid-text-sm">Gaps scale</span>
                </li>
              </ul>
            </div>
          </div>

          <!-- Fixed Tailwind Card -->
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl overflow-hidden shadow-lg">
            <div class="p-8">
              <div class="inline-block px-3 py-1 bg-blue-500 text-white rounded-full text-xs font-bold mb-4">
                TAILWIND FIXED
              </div>
              <h3 class="text-2xl font-bold text-gray-800 mb-3">
                This Card Fixed
              </h3>
              <p class="text-base text-gray-600 mb-4">
                All sizing uses Tailwind fixed utilities. Size stays consistent across viewports.
              </p>
              <ul class="space-y-2">
                <li class="flex items-center gap-2">
                  <span class="text-lg">üìå</span>
                  <span class="text-sm">Padding fixed</span>
                </li>
                <li class="flex items-center gap-2">
                  <span class="text-lg">üìå</span>
                  <span class="text-sm">Text fixed</span>
                </li>
                <li class="flex items-center gap-2">
                  <span class="text-lg">üìå</span>
                  <span class="text-sm">Gaps fixed</span>
                </li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Pros/Cons -->
        <div class="mt-12 bg-yellow-50 border-l-4 border-yellow-500 p-6 rounded-r-lg">
          <h3 class="fluid-text-xl font-bold text-yellow-900 mb-2">Approach 1 Pros & Cons</h3>
          <div class="grid md:grid-cols-2 gap-4 mt-4">
            <div>
              <h4 class="font-semibold text-green-700 mb-2">‚úÖ Pros:</h4>
              <ul class="text-sm text-gray-700 space-y-1">
                <li>‚Ä¢ Easy to start - just add fluid classes where needed</li>
                <li>‚Ä¢ Use Tailwind's full power for layout</li>
                <li>‚Ä¢ Mix and match as needed</li>
                <li>‚Ä¢ No configuration required</li>
              </ul>
            </div>
            <div>
              <h4 class="font-semibold text-red-700 mb-2">‚ùå Cons:</h4>
              <ul class="text-sm text-gray-700 space-y-1">
                <li>‚Ä¢ Need to remember two systems</li>
                <li>‚Ä¢ Tailwind utilities won't scale by default</li>
                <li>‚Ä¢ More verbose (two class names)</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <script>
      // Scroll behavior for debug bar
      let lastScrollTop = 0;
      const debugBar = document.getElementById('debugBar');
      
      if (debugBar) {
        window.addEventListener('scroll', function() {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
          
          if (scrollTop > lastScrollTop && scrollTop > 50) {
            // Scrolling down & past 50px
            debugBar.style.transform = 'translateY(100%)';
          } else {
            // Scrolling up
            debugBar.style.transform = 'translateY(0)';
          }
          
          lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
        }, false);
      }

      function updateDebug() {
        const vw = window.innerWidth;
        const vh = window.innerHeight;
        const vwEl = document.getElementById('vw');
        const vhEl = document.getElementById('vh');
        const htmlFsEl = document.getElementById('htmlFs');
        const bpEl = document.getElementById('bp');
        
        if (vwEl) vwEl.textContent = String(vw);
        if (vhEl) vhEl.textContent = String(vh);
        
        const htmlFs = parseFloat(getComputedStyle(document.documentElement).fontSize);
        if (htmlFsEl) htmlFsEl.textContent = htmlFs.toFixed(2);
        
        let bp = vw <= 425 ? 'Mobile (Fluid)' :
                 vw < 768 ? 'Mobile-Tablet (Static)' :
                 vw < 1024 ? 'Tablet (Fluid)' :
                 vw < 1280 ? 'Tablet-Desktop (Static)' :
                 vw < 1440 ? 'Desktop (Fluid)' : 'Desktop+ (Static)';
        
        if (bpEl) bpEl.textContent = bp;
      }
      
      updateDebug();
      window.addEventListener('resize', updateDebug);
      setInterval(updateDebug, 100);
    </script>
        <script src="https://website-widgets.pages.dev/dist/sienna.min.js" defer></script>
  </body>
</html>

