---
// Test page to demonstrate fluid scaling
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>Fluid Design Test - Astro</title>
		<style>
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			html {
				/* Truly fluid font scaling from 320px to 1920px+ */
				font-size: clamp(14px, 0.8vw + 12px, 18px);
				scroll-behavior: smooth;
			}

			body {
				font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
				line-height: 1.6;
				color: #333;
				overflow-x: hidden;
				background: #f8f9fa;
			}

			.test-container {
				max-width: 1200px;
				margin: 0 auto;
				padding: clamp(1rem, 3vw + 0.5rem, 3rem);
			}

			.test-title {
				font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
				margin-bottom: clamp(1rem, 2vw + 0.5rem, 2rem);
				color: #2c3e50;
				text-align: center;
			}

			.test-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(clamp(250px, 30vw + 100px, 400px), 1fr));
				gap: clamp(1rem, 2vw + 0.5rem, 2rem);
				margin-bottom: clamp(2rem, 4vw, 3rem);
			}

			.test-card {
				background: white;
				padding: clamp(1rem, 2vw + 0.5rem, 2rem);
				border-radius: clamp(0.5rem, 1vw + 0.3rem, 1rem);
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
				transition: transform 0.3s ease;
			}

			.test-card:hover {
				transform: translateY(-4px);
			}

			.test-card h3 {
				font-size: clamp(1.1rem, 2vw + 0.5rem, 1.5rem);
				margin-bottom: clamp(0.5rem, 1vw + 0.3rem, 1rem);
				color: #34495e;
			}

			.test-card p {
				font-size: clamp(0.9rem, 1.5vw + 0.4rem, 1.1rem);
				color: #7f8c8d;
				line-height: 1.6;
			}

			.viewport-info {
				background: #3498db;
				color: white;
				padding: clamp(1rem, 2vw + 0.5rem, 1.5rem);
				border-radius: clamp(0.5rem, 1vw + 0.3rem, 1rem);
				text-align: center;
				margin-bottom: clamp(1rem, 2vw + 0.5rem, 2rem);
			}

			.viewport-info h2 {
				font-size: clamp(1.2rem, 2.5vw + 0.5rem, 1.8rem);
				margin-bottom: clamp(0.5rem, 1vw + 0.3rem, 1rem);
			}

			.viewport-info p {
				font-size: clamp(0.9rem, 1.5vw + 0.4rem, 1.1rem);
				opacity: 0.9;
			}

			.fluid-demo {
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				color: white;
				padding: clamp(2rem, 4vw + 1rem, 4rem);
				border-radius: clamp(1rem, 2vw + 0.5rem, 2rem);
				text-align: center;
				margin-bottom: clamp(2rem, 4vw, 3rem);
			}

			.fluid-demo h2 {
				font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
				margin-bottom: clamp(1rem, 2vw + 0.5rem, 2rem);
			}

			.fluid-demo p {
				font-size: clamp(1rem, 2vw + 0.5rem, 1.4rem);
				opacity: 0.9;
				max-width: 800px;
				margin: 0 auto;
			}

			.button-demo {
				display: flex;
				flex-wrap: wrap;
				gap: clamp(0.75rem, 2vw, 1rem);
				justify-content: center;
				margin-top: clamp(1rem, 2vw + 0.5rem, 2rem);
				/* Completely fluid - no rigid breakpoints */
			}

			.demo-btn {
				padding: clamp(0.6rem, 1.5vw + 0.5rem, 1.2rem) clamp(1.25rem, 3vw + 0.5rem, 2.5rem);
				border: none;
				border-radius: clamp(0.4rem, 1vw + 0.3rem, 0.8rem);
				font-size: clamp(0.8rem, 1.5vw + 0.4rem, 1.1rem);
				font-weight: 600;
				cursor: pointer;
				transition: all 0.3s ease;
				min-width: clamp(120px, 20vw + 40px, 160px);
				max-width: clamp(160px, 30vw + 80px, 200px);
				flex: 1 1 auto;
				text-align: center;
			}

			.demo-btn.primary {
				background: #fff;
				color: #667eea;
			}

			.demo-btn.primary:hover {
				background: #f8f9fa;
				transform: translateY(-2px);
			}

			.demo-btn.secondary {
				background: transparent;
				color: #fff;
				border: 2px solid #fff;
			}

			.demo-btn.secondary:hover {
				background: #fff;
				color: #667eea;
				transform: translateY(-2px);
			}
		</style>
	</head>
	<body>
		<div class="test-container">
			<h1 class="test-title">Fluid Design Test Page</h1>
			
			<div class="viewport-info">
				<h2>Current Viewport</h2>
				<p>Resize your browser window to see fluid scaling in action!</p>
			</div>

			<div class="fluid-demo">
				<h2>Fluid Typography & Spacing</h2>
				<p>This text and spacing scale smoothly as you resize the browser window. No jarring jumps or sudden changes - just smooth, continuous scaling that adapts to any screen size.</p>
			</div>

			<div class="test-grid">
				<div class="test-card">
					<h3>Mobile (320px+)</h3>
					<p>Optimized for small screens with fluid scaling that starts at 320px and scales smoothly upward.</p>
				</div>
				<div class="test-card">
					<h3>Tablet (768px+)</h3>
					<p>Perfect for tablet devices with responsive grid layouts and fluid typography that adapts continuously.</p>
				</div>
				<div class="test-card">
					<h3>Desktop (1280px+)</h3>
					<p>Full desktop experience with fluid scaling that maintains perfect proportions at any size.</p>
				</div>
			</div>

			<div class="test-grid">
				<div class="test-card">
					<h3>CSS Clamp()</h3>
					<p>Using clamp() for fluid typography: clamp(1rem, 2vw + 0.5rem, 2rem) scales smoothly between minimum and maximum values.</p>
				</div>
				<div class="test-card">
					<h3>Viewport Units</h3>
					<p>vw, vh, and vmin units provide responsive sizing that scales with the viewport dimensions.</p>
				</div>
				<div class="test-card">
					<h3>Flexible Grid</h3>
					<p>CSS Grid with auto-fit and minmax() creates layouts that adapt fluidly to any container size.</p>
				</div>
			</div>

			<div class="fluid-demo">
				<h2>Fluid Button Layout</h2>
				<p>Buttons that naturally wrap and flow without rigid breakpoints. Resize to see smooth transitions!</p>
				<div class="button-demo">
					<button class="demo-btn primary">Get Started</button>
					<button class="demo-btn secondary">Learn More</button>
				</div>
			</div>
		</div>

		<script>
			// Update viewport info in real-time
			function updateViewportInfo() {
				const width = window.innerWidth;
				const height = window.innerHeight;
				const info = document.querySelector('.viewport-info p');
				if (info) {
					info.textContent = `Current viewport: ${width}px Ã— ${height}px - Resize to see fluid scaling!`;
				}
			}

			window.addEventListener('resize', updateViewportInfo);
			updateViewportInfo();
		</script>
	</body>
</html>
